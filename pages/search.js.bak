import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';
import Layout from '../components/Layout';

export default function Search() {
  const [query, setQuery] = useState('');
  const [results, setResults] = useState([]);
  const [isSearching, setIsSearching] = useState(false);
  const router = useRouter();
  
  // Run search when the page loads if there's a query parameter
  useEffect(() => {
    if (router.query.q) {
      setQuery(router.query.q);
      performSearch(router.query.q);
    }
  }, [router.query.q]);
  
  // Function to perform the search
  const performSearch = async (searchQuery) => {
    if (!searchQuery.trim()) return;
    
    setIsSearching(true);
    
    try {
      // Call the API endpoint to search essays
      const response = await fetch(`/api/search?q=${encodeURIComponent(searchQuery)}`);
      if (!response.ok) throw new Error('Search failed');
      
      const searchResults = await response.json();
      setResults(searchResults);
    } catch (error) {
      console.error('Search error:', error);
      setResults([]);
    } finally {
      setIsSearching(false);
    }
  };

  const handleSearch = async (e) => {
    e.preventDefault();
    if (!query.trim()) return;
    
    // Navigate to search page with query parameter
    router.push({
      pathname: '/search',
      query: { q: query }
    }, undefined, { shallow: true });
    
    performSearch(query);
  };

  return (
    <Layout title="Search" description="Search for essays and content">
      <div className="page-header">
        <h1>Search</h1>
        <p className="subtitle">Find essays by title, content, or summary</p>
      </div>
      
      <div className="search-container">
        <form onSubmit={handleSearch}>
          <input
            type="text"
            className="search-input"
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            placeholder="Search for essays..."
            aria-label="Search query"
          />
          <button type="submit" className="search-button" disabled={isSearching}>
            {isSearching ? 'Searching...' : 'Search'}
          </button>
        </form>
      </div>
      
      <div className="search-results">
        <h2>Results {query ? `for "${query}"` : ''}</h2>
        
        {isSearching ? (
          <p>Searching...</p>
        ) : results.length > 0 ? (
          <ul className="essay-list">
            {results.map((essay) => (
              <li key={essay.slug} className="essay-item">
                <h3 className="essay-title">
                  <Link href={`/essays/${essay.slug}`}>
                    {essay.title}
                  </Link>
                </h3>
                <p className="essay-date">
                  {new Date(essay.date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                  })}
                </p>
                {essay.summary && <p className="essay-summary">{essay.summary}</p>}
              </li>
            ))}
          </ul>
        ) : (
          <p>{query ? 'No essays found. Try a different search term.' : 'Enter a search term to find essays.'}</p>
        )}
      </div>
      
      <style jsx>{`
        .page-header {
          margin-bottom: 2rem;
        }
        
        .page-header h1 {
          font-size: 1.8rem;
          font-weight: 600;
          margin-bottom: 0.5rem;
          color: var(--text-primary, var(--text-color));
        }
        
        .subtitle {
          color: var(--text-secondary, var(--footer-text));
          font-size: 1rem;
        }
        
        .search-container {
          margin-bottom: 2rem;
        }
        
        .search-container form {
          display: flex;
          max-width: 600px;
        }
        
        .search-input {
          flex: 1;
          padding: 10px 15px;
          border: 1px solid var(--input-border);
          border-radius: 4px 0 0 4px;
          font-size: 1rem;
          background-color: var(--input-bg);
          color: var(--input-text);
        }
        
        .search-button {
          padding: 10px 20px;
          background-color: var(--link-color);
          color: var(--background-color);
          border: none;
          border-radius: 0 4px 4px 0;
          cursor: pointer;
          font-size: 1rem;
        }
        
        .search-button:hover {
          background-color: var(--link-hover-color);
        }
        
        .search-button:disabled {
          background-color: var(--footer-text);
          cursor: not-allowed;
        }
        
        .search-results h2 {
          font-size: 1.4rem;
          margin-bottom: 1.5rem;
          font-weight: 500;
          color: var(--text-primary, var(--text-color));
        }
        
        .essay-list {
          list-style: none;
          padding: 0;
        }
        
        .essay-item {
          margin-bottom: 1.5rem;
          padding-bottom: 1.5rem;
          border-bottom: 1px solid var(--border-color);
        }
        
        .essay-title {
          font-size: 1.2rem;
          margin-bottom: 0.5rem;
        }
        
        .essay-title a {
          color: var(--text-primary, var(--text-color));
          text-decoration: none;
        }
        
        .essay-title a:hover {
          text-decoration: underline;
          color: var(--link-hover-color);
        }
        
        .essay-date {
          font-size: 0.9rem;
          color: var(--text-secondary, var(--footer-text));
          margin-bottom: 0.5rem;
        }
        
        .essay-summary {
          font-size: 1rem;
          line-height: 1.5;
          color: var(--text-primary, var(--text-color));
        }
      `}</style>
    </Layout>
  );
} 